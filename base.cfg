[buildout]
extensions = mr.developer
package-name =
    openprocurement.integrations.edr

auto-checkout = ${:package-name}
parts =
    scripts
    circus
    circusd
    circusctl
    circus.ini
    integrations_edr_data_bridge
    integrations_edr_data_bridge.yaml
    openprocurement.integrations.edr.ini
    competitive_dialogue_data_bridge
    competitive_dialogue_data_bridge.yaml
    shredder
eggs =
    chaussette
    pyramid
    request_id_middleware
    server_cookie_middleware
    ${:package-name}
find-links =
    http://op:x9W3jZ@dist.quintagroup.com/op/

[remotes]
gh = https://github.com/
gh_push = git@github.com:
opgh = ${remotes:gh}openprocurement/openprocurement
opgh_push = ${remotes:gh_push}openprocurement/openprocurement
itivan = ${remotes:gh}ITVaan/openprocurement

[sources]
openprocurement.api = git ${remotes:itivan}.api.git pushurl=${remotes:itivan}.api.git branch=production
openprocurement.chronograph = git ${remotes:opgh}.chronograph.git pushurl=${remotes:opgh_push}.chronograph.git
openprocurement.planning.api = git ${remotes:opgh}.planning.api.git pushurl=${remotes:opgh_push}.planning.api.git
openprocurement.tender.limited = git ${remotes:itivan}.tender.limited.git pushurl=${remotes:itivan}.tender.limited.git branch=production
openprocurement.tender.openua = git ${remotes:itivan}.tender.openua.git pushurl=${remotes:itivan}.tender.openua.git branch=production
openprocurement.tender.openeu = git ${remotes:itivan}.tender.openeu.git pushurl=${remotes:itivan}.tender.openeu.git branch=production
openprocurement.contracting.api = git ${remotes:opgh}.contracting.api.git pushurl=${remotes:opgh_push}.contracting.api.git branch=production
openprocurement.tender.openuadefense = git ${remotes:opgh}.tender.openuadefense.git pushurl=${remotes:opgh_push}.tender.openuadefense.git branch=production
openprocurement.tender.competitivedialogue = git ${remotes:itivan}.tender.competitivedialogue.git pushurl=${remotes:itivan}.tender.competitivedialogue.git branch=production
openprocurement.integrations.edr = git ${remotes:itivan}.integrations.edr.git pushurl=${remotes:itivan}.integrations.edr.git branch=add_bridge

[config-from-template]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}
output = ${buildout:directory}/etc/${:_buildout_section_name_}

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python
scripts = chaussette


[competitive_dialogue_data_bridge]
recipe = zc.recipe.egg
eggs =
    openprocurement.tender.competitivedialogue [databridge]
scripts = competitive_dialogue_data_bridge

[integrations_edr_data_bridge]
recipe = zc.recipe.egg
eggs =
    openprocurement.integrations.edr [databridge]
scripts = integrations_edr_data_bridge

[circus]
recipe = zc.recipe.egg
eggs =
    circus
    circus-web
interpreter =
scripts =
    circusd-stats
    circus-top
    circus-plugin
    circushttpd


[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=circus
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl

[circus.ini]
<= config-from-template
couchdb = True
concord = True
penstock =
vaurien =
statsd = True
webapp = True
edr_webapp = True
edr_web_port = 6547
edr_web_host = 0.0.0.0
web_port = 6543
web_host = 0.0.0.0
chronograph = True
chronograph_port = 6544
chronograph_host = 0.0.0.0
integrations_edr_data_bridge = True
integrations_edr_api = True
competitive_dialogue_data_bridge = True
endpoint = ipc://${buildout:directory}/var/circus_endpoint
pubsub_endpoint = ipc://${buildout:directory}/var/circus_pubsub
timezone = Europe/Kiev

[openprocurement.integrations.edr.ini]
<= config-from-template
debug = false
auth_file = ${buildout:directory}/auth.ini
exc_logger = 1


[integrations_edr_data_bridge.yaml]
<= config-from-template
tenders_api_server = https://lb.api-sandbox.openprocurement.org
public_tenders_api_server = http://public.api-sandbox.openprocurement.org
edr_api_server = https://zqedr-api.nais.gov.ua
edr_api_token = edr_api_token
buffers_size = 500
full_stack_sync_delay = 15
empty_stack_sync_delay = 101
on_error_sleep_delay = 5
tenders_api_version = 0
edrapi_api_server = https://lb.api-sandbox.openprocurement.org
api_token = edrapi_secret

[competitive_dialogue_data_bridge.yaml]
<= config-from-template
tenders_api_server = https://api-sandbox.openprocurement.org
tenders_api_version = 0
api_token = competitive_dialogue_secret

[logrotate.conf]
<= config-from-template
logs_bucket =
logs_dir =
aws_access_key = ${openprocurement.api.ini:aws_access_key}
aws_secret_key = ${openprocurement.api.ini:aws_secret_key}

[logrotate-hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:output} >>${buildout:directory}/var/log/logrotate.log 2>&1

[awscli]
recipe = zc.recipe.egg
scripts = aws

[autostart]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/circusd --daemon --pidfile ${buildout:directory}/circus.pid

[shredder]
recipe = collective.recipe.template
inline =
    #!${buildout:bin-directory}/python
    from couchdb import Server
    from couchdb.design import ViewDefinition
    from openprocurement.api.models import get_now
    from datetime import timedelta
    aserver = Server('http://${couchdb.ini:username}:${couchdb.ini:password}@${couchdb.ini:host}:${couchdb.ini:port}/')
    adb = aserver['${openprocurement.api.ini:couchdb_db}']
    server = Server('${openprocurement.api.ini:couchdb_url}')
    db = server['${openprocurement.api.ini:couchdb_db}']
    shredder_view = ViewDefinition('shredder', 'tenders', "function(doc){if(doc.doc_type=='Tender' && doc.status=='draft'){emit(doc.dateModified, doc._rev)}}")
    ViewDefinition.sync_many(adb, [shredder_view])
    date = (get_now() - timedelta(7)).isoformat()
    tenders = []
    for i in shredder_view(db, endkey=date):
        tenders.append({'_id': i.id, '_rev': i.value, '_deleted': True})
    print db.update(tenders)
output = ${buildout:bin-directory}/${:_buildout_section_name_}
mode = 755
